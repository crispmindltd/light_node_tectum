
### Purpose
Retrieve a list of coin transfer transactions for a user based on the session key and the amount of transactions to retrieve.

### Request Description
- **Method**: GET  
- **URL**: `/coins/transfers`

### Request Parameters

| Parameter     | Required | Location | Data Type | Constraints      | Description                           |
| ------------- | -------- | -------- | --------- | ---------------- | ------------------------------------- |
| session_key   | Yes      | Query    | String    | Valid session key | The session key of the user           |
| amount        | Yes      | Query    | Integer   | Positive value   | The number of transactions to retrieve|

#### Example Request
```
GET /coins/transfers?session_key=ipafLwEcWb7jXe8kEcaJPKpqkltXx3UvlE&amount=5
```

### Response Parameters

#### Successful Response
- **HTTP Status Code**: 200 OK

| Parameter    | Required | Data Type | Description                             |
| ------------ | -------- | --------- | --------------------------------------- |
| history      | Yes      | Array     | List of transaction history entries     |

Each entry in the `history` array contains the following:

| Parameter      | Required | Data Type | Description                             |
| -------------- | -------- | --------- | --------------------------------------- |
| blockNumber    | Yes      | Integer   | Block number in which transaction occurred|
| time           | Yes      | String    | Timestamp of the transaction            |
| tokenFar       | Yes      | String    | Token identifier (address) involved in the transaction |
| transferSum    | Yes      | Decimal   | Amount of coins transferred             |
| direction      | Yes      | Integer   | Direction of the transfer (1 for outgoing, 2 for incoming) |
| hash           | Yes      | String    | Transaction hash                        |
| amount         | Yes      | Decimal   | Remaining balance after transaction     |

#### Example Successful Response
```json
{
  "history": [
    {
      "blockNumber": 191131,
      "time": "29.08.2024 03:17:20",
      "tokenFar": "0xf38197a7d346702991d712f2850173f2328643ae",
      "transferSum": 0.5,
      "direction": 2,
      "hash": "FAB48C2272CEC5C7CA6415F9ED98C9DD5EA3BE211141C8D801EC90780E639BC7",
      "amount": 3.999
    }
  ]
}
```

### Error Response
#### Common Error Response Structure

| Parameter | Required | Data Type | Description          |
| --------- | -------- | --------- | -------------------- |
| error     | Yes      | String    | Error code           |
| message   | Yes      | String    | Error description    |

### Error Codes

| Error Code              | HTTP Status Code  | Error Description                  |
| ----------------------- | ----------------- | ---------------------------------- |
| VALIDATION_FAILED       | 400 Bad Request   | Invalid amount value provided      |

#### Example Error Response
```json
{
  "error": "VALIDATION_FAILED",
  "message": "invalid amount value"
}
```

### Workflow
1. The user sends a request with the session key and the number of transactions to retrieve.
2. The server returns a history of the requested transactions.
3. If the request is invalid (e.g., amount = 0), the server returns an error.
